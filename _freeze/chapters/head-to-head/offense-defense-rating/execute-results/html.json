{
  "hash": "e175e8a8792e7350876b8aad8f1ac532",
  "result": {
    "engine": "knitr",
    "markdown": "# Offense-Defense Rating\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"tidyverse\"); theme_set(theme_bw())\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4.9000     ✔ readr     2.1.5     \n✔ forcats   1.0.0          ✔ stringr   1.5.1     \n✔ ggplot2   3.5.1          ✔ tibble    3.2.1     \n✔ lubridate 1.9.3          ✔ tidyr     1.3.1     \n✔ purrr     1.0.2          \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n:::\n\n\n\n\n\nA simple example of offense-defense data is this fictitious collection of 4 \nteams that have played 5 games. \n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- tribble(\n  ~home, ~away, ~home_score, ~away_score, \n      1,     2,          21,           7,\n      2,     3,          13,          14,\n      4,     1,           3,          28,\n      3,     4,          31,           0,\n      1,     3,          42,          10\n) \n```\n:::\n\n\n\n\n\nPreviously, we calculated the margin of victory (home score minus away score)\nand constructed a model for the margin of victory. \nIn those models, we estimated a team strength and used the difference in team\nstrengths to calculate the expected margin of victory and game outcome\nprobabilities. \n\nIn this chapter, we will build models for the both the home score and the \naway score. \nUsing the scores allows us to estimate offense and defense team strengths. \n\n\n\n## Model\n\nA model for the number of points scored by the home team is \n\n$$S^H_g = \\eta + \\theta_{H[g]} - \\delta_{A[g]} + \\epsilon^H_g$$\n\nwhere, for game $g$,\n\n- $S^H_g$ is the score for the home team,\n- $H[g]$ is the ID for the home team, \n- $A[g]$ is the ID for the away team,\n- $\\epsilon^H_g$ is a random error.\n\nThis error arises because if two teams play each other repeatedly we would \nexpect the home score would be random around the expected\nhome score.\n\nThe parameters are \n\n- $\\eta$ is the offensive home advantage, \n- $\\theta_t$ is the offensive strength of team $t$, and\n- $\\delta_t$ is the defense strength of team $t$.\n\nThe expected home score when team $H$ is at home playing against team $A$ is \n\n$$E\\left[S^H\\right] = \\eta + \\theta_{H} - \\delta_{A}.$$\nWe can build a similar model for the away team score. \nA model for the number of points scored by the away team is \n\n$$S^A_g = \\theta_{A[g]} - \\delta_{H[g]} + \\epsilon^A_g$$\n\nwhere, for game $g$,\n\n- $S^A_g$ is the score for the away team,\n- $\\epsilon^A_g$ is a random error.\n\nThis error arises because if two teams play each other repeatedly we would \nexpect the away score would be random around the expected\naway score.\n\nThe expected away score when team $H$ is at home playing against team $A$ is \n\n$$E\\left[S^A\\right] = \\theta_{A} - \\delta_{H}.$$\n\nWe can utilize these models to calculate the expected margin of victory $M$ for \nhome team $H$ playing away team $A$:\n$$\\begin{array}{rl} \nE[M] \n&= E[S^H - S^A] \\\\\n&= E[S^H] - E[S^A] \\\\\n&= \\eta + \\theta_H  - \\delta_A - (\\eta_D + \\theta_A - \\delta_H) \\\\\n&= \\eta + (\\theta_H + \\delta_H) - (\\theta_A + \\delta_A) \n\\end{array}\n$$\nwhere \n\n- $\\eta$ is the home advantage,\n- $\\theta_H - \\delta_H$ is the strength of the home team, and\n- $\\theta_A - \\delta_A$ is the strength of the away team.\n\n\n\n### Identifiability\n\nIn this model, \nwhen two teams play each other, the score is expected to be the \nhome advantage $\\eta$ plus the difference in strengths between the two\nteams $\\theta - \\delta$.\nThus, only the difference between the offense and defense rating is identifiable.\n\n\n\n\n### Regression\n\n\nIf we assume $\\epsilon_i \\stackrel{ind}{\\sim} N(0,\\sigma^2)$,\nthen this is a linear regression model. \n\nSince we have both the offensive parameters ($\\theta$s) and defensive \nparameters ($\\delta$s), \nwe will need to construct a home matrix $X^H$ and an away matrix $X^A$. \nFor $X^H$ we have \n$$X^H_{g,t} = \\left\\{\n\\begin{array}{rl}\n1 & \\mbox{if team $t$ is the {\\bf home} team in game $g$} \\\\\n0 & \\mbox{otherwise}\n\\end{array} \\right.$$\n\nFor $X^A$ we have \n$$X^A_{g,t} = \\left\\{\n\\begin{array}{rl}\n1 & \\mbox{if team $t$ is the {\\bf away} team in game $g$} \\\\\n0 & \\mbox{otherwise}\n\\end{array} \\right.$$\n\nCompared to the model matrices we created earlier, \nwe have no negative values (-1) in these matrices. \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconstruct_matrix <- function(d, Col = \"home\") {\n  n_games <- nrow(d)\n  n_teams <- length(unique(unlist(d[, Col])))\n  \n  m <- matrix(0, \n              nrow = n_games, \n              ncol = n_teams)\n  \n  for (g in 1:n_games) {\n    m[g, as.numeric(d[g, Col])] <-  1\n  }\n  \n  return(m)\n}\n\nX_h <- construct_matrix(d, \"home\")\nX_a <- construct_matrix(d, \"away\")\n```\n:::\n\n\n\n\n\nCheck to make sure these matrices are appropriate\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# n_games x n_teams\ndim(X_h) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5 4\n```\n\n\n:::\n\n```{.r .cell-code}\ndim(X_a) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5 4\n```\n\n\n:::\n\n```{.r .cell-code}\n# all entries are 0 or 1\nall(unique(X_h) %in% 0:1) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nall(unique(X_a) %in% 0:1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nall(rowSums(X_h) == 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nall(rowSums(X_a) == 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\nTo see how it is a linear regression model, \nwe can construct a regression model using matrix algebra\n$$\nY = \\left[ \\begin{array}{c} \nS^H_1 \\\\ \\vdots \\\\ S^H_G \\\\\nS^A_1 \\\\ \\vdots \\\\ S^A_G \n\\end{array} \\right] \n= \\left[ \\begin{array}{cc} \n1 & X_h & -X_a \\\\ 0 & X_a & -X_h\n\\end{array} \\right] \n\\left[ \\begin{array}{c} \n\\eta \\\\ \n\\theta_1 \\\\ \\vdots \\\\ \\theta_T \\\\\n\\delta_1 \\\\ \\vdots \\\\ \\delta_T \n\\end{array} \\right] + \\epsilon \n= X\\beta + \\epsilon\n$$\nwhere \n\n- $G$ is the number of games,\n- $T$ is the number of teams, and\n- $1$ ($0$) is shorthand for a $G \\times 1$ vector of all 1s (0s), and\n- $\\epsilon$ is a $G\\times 2$ vector with $\\epsilon \\sim N(0,\\sigma^2 \\mathrm{I})$.\n\n\n\n\n\n\n\nThus, we can estimate the parameters in this model using linear regression.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Construct score vector\nY <- c(d$home_score, d$away_score)\n\n# Construct (complete) model matrix\nX <- rbind(\n  cbind(1, X_h, -X_a),\n  cbind(0, X_a, -X_h)\n)\n\n# Fit model\nm <- lm(Y ~ 0 + X) # 0 removes intercept (so does -1) \nsummary(m)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = Y ~ 0 + X)\n\nResiduals:\n     1      2      3      4      5      6      7      8      9     10 \n-3.833 -4.083  1.194  1.444  5.278  4.083  3.833 -1.444 -1.194 -5.278 \n\nCoefficients: (1 not defined because of singularities)\n   Estimate Std. Error t value Pr(>|t|)  \nX1   7.3889     5.2804   1.399   0.2967  \nX2  29.4444     7.3500   4.006   0.0570 .\nX3   9.8056    10.0536   0.975   0.4323  \nX4  22.1667     6.8595   3.232   0.0839 .\nX5   1.3056    10.0536   0.130   0.9086  \nX6   6.8889     8.6565   0.796   0.5096  \nX7  12.0000     7.9206   1.515   0.2690  \nX8   0.1111     8.6565   0.013   0.9909  \nX9       NA         NA      NA       NA  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 7.921 on 2 degrees of freedom\nMultiple R-squared:  0.9719,\tAdjusted R-squared:  0.8597 \nF-statistic: 8.662 on 8 and 2 DF,  p-value: 0.1076\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhome_advantage <- coef(m)[1]\n\nteams <- data.frame(\n  team = rep(1:4, times = 2),\n  type = rep(c(\"offense\", \"defense\"), each = 4),\n  rating = coef(m)[-1]\n) |>\n  mutate(\n    rating = ifelse(is.na(rating), 0, rating),\n    rating = rating - mean(rating)\n  ) |>\n  pivot_wider(\n    names_from = type,\n    values_from = rating\n  ) |>\n  mutate(\n    strength = offense + defense\n  )\n```\n:::\n\n\n\n\n\n\n### Prediction\n\nLet $S^H$ ($S^A$) be the score for the home (away) team in an upcoming game. \nThe regression model assumes\n$$\nS^H \\sim N(\\eta + \\theta_H - \\delta_A, \\sigma^2) \n\\quad \\mbox{and (independently)} \\quad \nS^A \\sim N(\\theta_A - \\delta_H, \\sigma^2). \n$$\nThus, the margin of victory $M$ is \n$$\nM = S^H - S^A \\sim N(E[M], 2\\sigma^2)\n$$\nwhere \n$$E[M] = \\eta + (\\theta_H + \\delta_H) - (\\theta_A + \\delta_A).$$\n\n\n\nTo find the probability the home team wins we use \n$$P(M > 0) \n= P\\left( T_v > \\frac{-E[M]}{\\sigma\\sqrt{2}} \\right) \n= P\\left( T_v < \\frac{ E[M]}{\\sigma\\sqrt{2}} \\right)\n$$\nwhere $T_v$ is a T-distribution with $v$ is the degrees of freedom.\nThe degrees of freedom can be calculated using $v = 2(G-T)$.\n\nIf $G >> T$ (which is certainly not true in our simple example), \nthen $T_v \\stackrel{d}{\\approx} Z$ \n(where $\\stackrel{d}{\\approx}$ means approximately equal in distribution).\nThus, we can calculate the probability using\n$$\nP(M > 0) \\approx P\\left( Z < \\frac{ E[M]}{\\sigma\\sqrt{2}} \\right).\n$$\n\nThe standard deviation here is \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(sd <- summary(m)$sigma)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 7.920613\n```\n\n\n:::\n:::\n\n\n\n\n\n\nSuppose Team 1 plays against Team 2 at Team 1's home. \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Margin of Victory: Team 1 (Home) - Team 2 (Away)\nexpected_margin <- as.numeric(coef(m)[1] + \n                                teams[1, \"strength\"] - \n                                teams[2, \"strength\"]) \n\n# Probability of Victory: Team 1 (Home) - Team 2 (Away)\npt(expected_margin / (sd * sqrt(2)), df = summary(m)$df[2])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9052297\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## Examples\n\n### Baseball\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbaseball <- read.csv(\"../../data/college_baseball_2024.csv\") |>\n  \n  # Create home/away teams and scores\n  # for neutral sites, home/away will be arbitrary\n  mutate(\n    Home_Field = gsub(\"@\", \"\", Home_Field),\n    home_is_Team_1 =                        # this is used repeatedly below\n      Home_Field == \"neutral\" | \n        Home_Field == Team_1,  \n    \n    # Set the teams\n    home = ifelse(home_is_Team_1, Team_1, Team_2),\n    away = ifelse(home_is_Team_1, Team_2, Team_1),\n    \n    # Set the scores\n    home_score = ifelse(home_is_Team_1, Score_1, Score_2),\n    away_score = ifelse(home_is_Team_1, Score_2, Score_1),\n    \n    Date = as.Date(Dates, format = \"%m/%d/%Y\")\n  ) |>\n  filter(Home_Field != \"neutral\") |>\n  select(Date, Home_Field, home, away, home_score, away_score)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Construct factors for teams\nteams <- data.frame(\n  names = c(baseball$home, baseball$away) |>\n    unique() |>\n    sort() |>\n    factor()\n)\n\nbaseball <- baseball |>\n  mutate(\n    home = factor(home, levels = teams$names),\n    away = factor(away, levels = teams$names)\n  )\n\nX_h <- construct_matrix(baseball, \"home\")\nX_a <- construct_matrix(baseball, \"away\")\n```\n:::\n\n\n\n\n\nFit the model\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nY <- c(baseball$home_score, \n       baseball$away_score)\n\nX <- rbind(\n  cbind(1, X_h, -X_a),\n  cbind(0, X_a, -X_h)\n)\nm <- lm(Y ~ 0 + X) # 0 removes intercept (so does -1) \nsummary(m)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = Y ~ 0 + X)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-8.9329 -2.9293 -0.3731  2.2201 13.9119 \n\nCoefficients: (1 not defined because of singularities)\n    Estimate Std. Error t value Pr(>|t|)    \nX1    1.3951     0.5557   2.510 0.012857 *  \nX2    3.3262     1.1832   2.811 0.005429 ** \nX3    4.2627     1.1832   3.603 0.000398 ***\nX4    3.9188     1.1832   3.312 0.001100 ** \nX5    3.3672     1.1727   2.871 0.004529 ** \nX6    6.7411     1.1772   5.726 3.72e-08 ***\nX7    4.1092     1.1832   3.473 0.000631 ***\nX8    5.6595     1.1832   4.783 3.35e-06 ***\nX9    5.3685     1.1832   4.537 9.83e-06 ***\nX10   5.2415     1.2562   4.172 4.49e-05 ***\nX11  -3.0106     1.1933  -2.523 0.012421 *  \nX12  -3.1693     1.1933  -2.656 0.008549 ** \nX13  -1.4180     1.1933  -1.188 0.236145    \nX14  -1.4096     1.1814  -1.193 0.234227    \nX15  -0.8453     1.1814  -0.715 0.475168    \nX16   0.0582     1.1933   0.049 0.961150    \nX17  -0.6773     1.1933  -0.568 0.570997    \nX18  -1.3492     1.1933  -1.131 0.259574    \nX19       NA         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 4.101 on 200 degrees of freedom\nMultiple R-squared:  0.7552,\tAdjusted R-squared:  0.7332 \nF-statistic: 34.29 on 18 and 200 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhome_advantage <- coef(m)[1]\nsd             <- summary(m)$sigma\n\nratings <- data.frame(\n  team = rep(teams$names, times = 2),\n  type = rep(c(\"offense\", \"defense\"), each = nrow(teams)),\n  rating = coef(m)[-1]\n) |>\n  mutate(\n    rating = ifelse(is.na(rating), 0, rating),\n    rating = rating - mean(rating)\n  ) |>\n  pivot_wider(\n    names_from = type,\n    values_from = rating\n  ) |>\n  mutate(\n    strength = offense + defense\n  ) |>\n  arrange(desc(strength))\n\nratings \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 9 × 4\n  team            offense defense strength\n  <fct>             <dbl>   <dbl>    <dbl>\n1 Oklahoma State     5.06   -2.52    2.54 \n2 West Virginia      3.57   -1.68    1.89 \n3 Texas Christian    3.98   -2.35    1.63 \n4 Texas              2.43   -1.62    0.815\n5 Texas Tech         3.69   -3.03    0.667\n6 Kansas State       2.24   -3.09   -0.852\n7 Oklahoma           1.69   -3.09   -1.40 \n8 Kansas             2.59   -4.85   -2.26 \n9 Baylor             1.65   -4.69   -3.04 \n```\n\n\n:::\n:::\n\n\n\n\n\nLet's plot these ratings\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_ratings <- ratings |>\n  mutate(\n    offense = offense + 5,\n    defense = defense + 5,\n    strength = strength + 10\n  ) |>\n  pivot_longer(\n    cols = offense:strength,\n    names_to = \"type\",\n    values_to = \"rating\"\n  ) |>\n  mutate(\n    team = factor(team, levels = ratings$team[order(ratings$strength)]),\n    type = factor(type, levels = c(\"offense\",\"defense\",\"strength\"))\n  )\n\nggplot(p_ratings,\n       aes(\n         x = rating,\n         y = team\n       )) +\n  geom_bar(stat=\"identity\") + \n  facet_wrap(~type, nrow = 1, scales = \"free_x\")\n```\n\n::: {.cell-output-display}\n![](offense-defense-rating_files/figure-html/baseball-ratings-plot-1.png){width=672}\n:::\n:::\n\n\n\n\n\n### Iowa Football\n\n",
    "supporting": [
      "offense-defense-rating_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}