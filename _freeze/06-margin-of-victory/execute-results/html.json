{
  "hash": "549b4f31f17a62c0a460f35608a3a1e5",
  "result": {
    "engine": "knitr",
    "markdown": "# Margin of Victory\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"tidyverse\"); theme_set(theme_bw())\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'purrr' was built under R version 4.4.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4.9000     ✔ readr     2.1.5     \n✔ forcats   1.0.0          ✔ stringr   1.5.1     \n✔ ggplot2   3.5.1          ✔ tibble    3.2.1     \n✔ lubridate 1.9.3          ✔ tidyr     1.3.1     \n✔ purrr     1.0.4          \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(\"ggResidpanel\")\n```\n:::\n\n\nA simple example of margin-of-vectory data is this fictitious collection of 4 \nteams that have played 5 games. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- tribble(\n  ~home, ~away, ~home_score, ~away_score, \n      1,     2,          21,           7,\n      2,     3,          13,          14,\n      4,     1,           3,          28,\n      3,     4,          31,           0,\n      1,     3,          42,          10\n) |>\n  mutate(\n    margin = home_score - away_score\n  )\n```\n:::\n\n\nFor the analysis that follows, \nwe will construct a model matrix $X$ where \n$X_{g,t} = 1$ if team $t$ is the home team in game $g$,  \n$X_{g,t} = -1$ if team $t$ is the away team in game $g$,\n$X_{g,t} = 0$ otherwise.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconstruct_model_matrix <- function(d) {\n  n_games <- nrow(d)\n  n_teams <- length(unique(c(d$home, d$away)))\n  \n  m <- matrix(0, \n              nrow = n_games, \n              ncol = n_teams)\n  \n  for (g in 1:n_games) {\n    m[g, d$home[g]] <-  1\n    m[g, d$away[g]] <- -1\n  }\n  \n  return(m)\n}\n\nX <- construct_model_matrix(d)\nX\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     [,1] [,2] [,3] [,4]\n[1,]    1   -1    0    0\n[2,]    0    1   -1    0\n[3,]   -1    0    0    1\n[4,]    0    0    1   -1\n[5,]    1    0   -1    0\n```\n\n\n:::\n:::\n\n\n\n## Model\n\nA model for the margin of victory is \n\n$$M_i = \\eta + \\theta_H - \\theta_A + \\epsilon_i$$\n\nwhere \n\n- $M_i$ is the margin of victory for game $i$,\n- $\\eta$ is the home field advantage,\n- $\\theta_{H[i]}$ is the ability of the home team in game $i$, and \n- $\\theta_{A[i]}$ is the ability of the away team in game $i$.\n\nThe $\\epsilon_i$ is a random noise term. \nThis term arises because if two teams play each other repeatedly we would \nexpect that the score in their games would be random around the expected\nmargin of victory.\n\n$$E[M_i] = \\eta + \\theta_H - \\theta_A.$$\n\n\n### Identifiability\n\nIn this model, \nwhen two teams play each other, the margin of victory is expected to be the \nhome field advantage $\\eta$ plus the difference in strengths between the two\nteams $\\theta_H - \\theta_A$.\nThus, the individual $\\theta$s are not *identifiable*, but only there \ndifference is. \nAnother way to state this is that we could add a constant to all of the \nteam strengths and it would not change the distribution of the margin of \nvictory since \n$$(\\theta_H + c) - (\\theta_A + c) = \\theta_H - \\theta_A.$$\nEven though the individual $\\theta$ are not identifiable,\nthe differences are. \n\n::: {.callout-note}\n## Identifiable\nParameters (or functions of parameters) within a model are said to be \n*identifiable* if they can theoretically be estimated with an infinite amount \nof (the right kind of) data. \nThat is, as you collect more and more data, the uncertainty in the parameter\ndecreases to zero.\n:::\n\n\n### Regression\n\n\nIf we assume $\\epsilon_i \\stackrel{ind}{\\sim} N(0,\\sigma^2)$,\nthen this is a linear regression model. \nTo see how it is a linear regression model, \nwe use the model matrix above and construct the following model\n\n$$M_i = \\eta + \\theta_1 X_{i,1} + \\theta_2 X_{i,2} + \n\\theta_3 X_{i,3} + \\theta_4 X_{i,4} + \\epsilon_i, \n\\quad \\epsilon_i \\stackrel{ind}{\\sim} N(0,\\sigma^2)$$.\n\nThus, we can estimate the parameters in this model using linear regression.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm <- lm(d$margin ~ X) # intercept (home-field advantage) is included automatically\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(m)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = d$margin ~ X)\n\nResiduals:\n     1      2      3      4      5 \n-7.917 -7.917  2.639  2.639 10.556 \n\nCoefficients: (1 not defined because of singularities)\n            Estimate Std. Error t value Pr(>|t|)\n(Intercept)    7.389      7.464   0.990    0.503\nX1            35.028     12.656   2.768    0.221\nX2            20.500     15.833   1.295    0.419\nX3            20.972     12.656   1.657    0.346\nX4                NA         NA      NA       NA\n\nResidual standard error: 15.83 on 1 degrees of freedom\nMultiple R-squared:  0.8904,\tAdjusted R-squared:  0.5615 \nF-statistic: 2.707 on 3 and 1 DF,  p-value: 0.4137\n```\n\n\n:::\n:::\n\n\n\n\nFrom this model, we can obtain individual values for $\\theta$.\nThe estimated values are \n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoef(m)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n(Intercept)          X1          X2          X3          X4 \n   7.388889   35.027778   20.500000   20.972222          NA \n```\n\n\n:::\n:::\n\n\nWith these data, the estimated home field advantage is \n$\\eta = 7.3888889.\nThe estimated ability for the teams are \n\n::: {.cell}\n\n```{.r .cell-code}\ncoef(m)[-1]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      X1       X2       X3       X4 \n35.02778 20.50000 20.97222       NA \n```\n\n\n:::\n:::\n\n\nThe fourth team has an estimated value of $\\theta_4 = NA$,\ni.e. not available. \nThe reason for this is the identifiability issue above. \n\nHere, the $NA$ can be replaced by 0. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nteam_ability <- coef(m)[-1]\nteam_ability[4] <- 0\nteam_ability\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      X1       X2       X3       X4 \n35.02778 20.50000 20.97222  0.00000 \n```\n\n\n:::\n:::\n\n\nUsing these team ability estimates, we can compute the expected point \ndifference between the teams. \nFor example, on a neutral court, the expected point difference between team\n1 and team 2 is\n\n::: {.cell}\n\n```{.r .cell-code}\nteam_ability[1] - team_ability[2] # expected point difference on a neutral court\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      X1 \n14.52778 \n```\n\n\n:::\n:::\n\nSo Team 1 is expected to beat Team 2 by \n15\npoints. \n\n\n### Prediction\n\nIn addition to the expected point difference,\nyou can use this model to predict the probability that one team beats the \nother team. \nIn order to perform this prediction, we need to know the variability around\nthe expected point spread. \nWe can extract this information from the regression model.\nThe estimated residual standard deviation is \n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(m)$sigma\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 15.83333\n```\n\n\n:::\n:::\n\n\nPrediction in a regression model utilizes a $t$ distribution with degrees\nof freedom equal to the number of observations minus the number of teams. \nThis is given in the R output.\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(m)$df[2] \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n:::\n\nThus to calculate the probability that Team 1 beats Team 2 on a neutral court\nwe calculate\n$$P\\left(T_v < \\frac{\\theta_1 - \\theta_2}{\\hat\\sigma}\\right).$$\nIn R code, we have \n\n\n::: {.cell}\n\n```{.r .cell-code}\npt( (team_ability[1] - team_ability[2]) / summary(m)$sigma, summary(m)$df[2] )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       X1 \n0.7363208 \n```\n\n\n:::\n:::\n\n\n\n### Transitivity\n\nOne drawback of these types of models is that the model is transitive, \nbut this may not reflect reality. \nThe transitivity property in this model is \n$$\\theta_A > \\theta_B \\quad\\&\\quad \\theta_B > \\theta_C \\,\\implies\\, \\theta_A > \\theta_C.$$\nIn words, this means that if Team 1 is better than Team 2 and \nTeam 2 is better than Team 3, \nthen Team 1 must be better than Team 3. \nThis precludes the possibility that Team 3 could match up well against Team 1. \n\nAs an example, consider the following set of teams and games.\n\n::: {.cell}\n\n```{.r .cell-code}\nd2 <- tribble(\n  ~home, ~away, ~margin, \n      1,     2,     100,   \n      2,     3,      90, \n      3,     1,      95,\n  \n      2,     1,    -100,   \n      3,     2,     -90, \n      1,     3,     -95\n) \n```\n:::\n\n\nIf these were data for basketball games, \nwe would expect that \nTeam 1 has a high probability of beating Team 2,\nTeam 2 has a high probability of beating Team 3, and\nTeam 3 has a high probability of beating Team 1. \n\nFitting the model above and estimating the probstrengths tells a different\nstory.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nX2 <- construct_model_matrix(d2)\n\nm2 <- lm(d2$margin ~ X2)\nsummary(m2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = d2$margin ~ X2)\n\nResiduals:\n  1   2   3   4   5   6 \n 95  95  95 -95 -95 -95 \n\nCoefficients: (1 not defined because of singularities)\n              Estimate Std. Error t value Pr(>|t|)\n(Intercept)  3.599e-15  5.485e+01   0.000    1.000\nX21          2.220e-15  7.757e+01   0.000    1.000\nX22         -5.000e+00  7.757e+01  -0.064    0.953\nX23                 NA         NA      NA       NA\n\nResidual standard error: 134.4 on 3 degrees of freedom\nMultiple R-squared:  0.001843,\tAdjusted R-squared:  -0.6636 \nF-statistic: 0.00277 on 2 and 3 DF,  p-value: 0.9972\n```\n\n\n:::\n:::\n\n\nWe can already see issues here since none of the coefficients are \nsignificantly different from zero. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate team strengths\nteam_ability <- coef(m2)[-1]\nteam_ability[3] <- 0\nteam_ability\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          X21           X22           X23 \n 2.220446e-15 -5.000000e+00  0.000000e+00 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Calculate probstrengths\npt( (team_ability[1] - team_ability[2]) / summary(m2)$sigma, summary(m2)$df[2])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      X21 \n0.5136747 \n```\n\n\n:::\n\n```{.r .cell-code}\npt( (team_ability[1] - team_ability[3]) / summary(m2)$sigma, summary(m2)$df[2])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nX21 \n0.5 \n```\n\n\n:::\n\n```{.r .cell-code}\npt( (team_ability[2] - team_ability[3]) / summary(m2)$sigma, summary(m2)$df[2])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      X22 \n0.4863253 \n```\n\n\n:::\n:::\n\n\n\n\n### Estimability\n\nConsider this set of teams and games\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd3 <- tribble(\n  ~home, ~away, ~margin, \n      1,     2,      10,   \n      3,     4,       9\n) \n```\n:::\n\n\nFrom these data, we cannot determine how good teams 1-2 and compared to teams\n3-4. Even if with a lot more data we may not be able to estimate the model\nparameters.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd4 <- tribble(\n  ~home, ~away, ~margin, \n      1,     2,      10,   \n      3,     4,       9, \n      1,     2,       5,   \n      3,     4,      13, \n      1,     2,       1,   \n      3,     4,      -3, \n      1,     2,       2,   \n      3,     4,      -6 \n) \n```\n:::\n\n\nIf we try to actually fit this model, \n\n\n::: {.cell}\n\n```{.r .cell-code}\nX4 <- construct_model_matrix(d4)\nm4 <- lm(d4$margin ~ X4)\nsummary(m4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = d4$margin ~ X4)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-9.250 -4.188 -1.000  5.562  9.750 \n\nCoefficients: (3 not defined because of singularities)\n            Estimate Std. Error t value Pr(>|t|)\n(Intercept)    3.250      3.546   0.917    0.395\nX41            1.250      5.015   0.249    0.811\nX42               NA         NA      NA       NA\nX43               NA         NA      NA       NA\nX44               NA         NA      NA       NA\n\nResidual standard error: 7.092 on 6 degrees of freedom\nMultiple R-squared:  0.01025,\tAdjusted R-squared:  -0.1547 \nF-statistic: 0.06214 on 1 and 6 DF,  p-value: 0.8115\n```\n\n\n:::\n:::\n\n\nWhile previously we had only 1 line with NAs, \nwe now have 3 lines with NAs. \n\n::: {.callout-note}\n## Estimability\nParameters are said to be *estimable* with a certain said of data if\nthe parameters can be estimated with that data. \nThus parameters may be *identifiable* but not estimable while\nparameters that are not identifiable are never estimable. \n:::\n\n#### Graphs\n\nIn these models, the graph of team contests is helpful. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"igraph\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'igraph'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:lubridate':\n\n    %--%, union\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:dplyr':\n\n    as_data_frame, groups, union\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:purrr':\n\n    compose, simplify\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:tidyr':\n\n    crossing\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:tibble':\n\n    as_data_frame\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    decompose, spectrum\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:base':\n\n    union\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(graph_from_data_frame(d3[,c(2,1)]))          # arrows point away -> home\n```\n\n::: {.cell-output-display}\n![](06-margin-of-victory_files/figure-html/graph-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(graph_from_data_frame(d3, directed = FALSE))\n```\n\n::: {.cell-output-display}\n![](06-margin-of-victory_files/figure-html/graph-2.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(graph_from_data_frame(d4, directed = FALSE))\n```\n\n::: {.cell-output-display}\n![](06-margin-of-victory_files/figure-html/graph-3.png){width=672}\n:::\n:::\n\n\nParameters (or functions of parameters) may also be weakly estimable. \nConsider these data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_conf <- tribble(\n  ~home, ~away, ~margin, \n      1,     2,      10, # Conference 1  \n      3,     4,       9, \n      2,     3,      -2,\n      1,     4,     -20,\n      3,     1,       4,\n      4,     2,      16,\n      5,     6,      10, # Conference 2\n      7,     8,       9, \n      6,     7,      -2,\n      5,     8,     -20,\n      7,     5,       4,\n      8,     6,      16,\n      1,     5,      10 # Inter-conference Game\n) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(graph_from_data_frame(d_conf[, c(2,1)]))\n```\n\n::: {.cell-output-display}\n![](06-margin-of-victory_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nPredict the outcome for two teams \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Predict the outcome for 3 vs 7\nXconf <- construct_model_matrix(d_conf)\nm <- lm(d_conf$margin ~ Xconf)\nsummary(m)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = d_conf$margin ~ Xconf)\n\nResiduals:\n         1          2          3          4          5          6          7 \n 4.850e+00  1.035e+01  3.800e+00 -1.140e+01 -6.550e+00 -1.050e+00  4.850e+00 \n         8          9         10         11         12         13 \n 1.035e+01  3.800e+00 -1.140e+01 -6.550e+00 -1.050e+00 -2.092e-15 \n\nCoefficients: (1 not defined because of singularities)\n            Estimate Std. Error t value Pr(>|t|)\n(Intercept)    3.300      3.572   0.924    0.398\nXconf1        -5.200     14.837  -0.350    0.740\nXconf2        -7.050     16.371  -0.431    0.685\nXconf3         2.050     16.851   0.122    0.908\nXconf4         6.700     16.371   0.409    0.699\nXconf5       -11.900      8.185  -1.454    0.206\nXconf6       -13.750      7.988  -1.721    0.146\nXconf7        -4.650      8.185  -0.568    0.595\nXconf8            NA         NA      NA       NA\n\nResidual standard error: 11.3 on 5 degrees of freedom\nMultiple R-squared:  0.6168,\tAdjusted R-squared:  0.08026 \nF-statistic:  1.15 on 7 and 5 DF,  p-value: 0.4547\n```\n\n\n:::\n\n```{.r .cell-code}\n# Expected point difference (neutral court)\n(exp_diff <- coef(m)[4] - coef(m)[8])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nXconf3 \n   6.7 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Probability of winning (neutral court)\npt( exp_diff / summary(m)$sigma, df = summary(m)$df[2])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Xconf3 \n0.7105335 \n```\n\n\n:::\n:::\n\n\nNow let's change the result for the intraconference game and see what happens.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_conf2 <- d_conf\nd_conf2$margin[nrow(d_conf2)]        # old score\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 10\n```\n\n\n:::\n\n```{.r .cell-code}\nd_conf2$margin[nrow(d_conf2)] <- -10 # new score\n\n# Predict the outcome for 3 vs 7\nXconf2 <- construct_model_matrix(d_conf2)\nm2 <- lm(d_conf2$margin ~ Xconf2)\nsummary(m2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = d_conf2$margin ~ Xconf2)\n\nResiduals:\n         1          2          3          4          5          6          7 \n 4.850e+00  1.035e+01  3.800e+00 -1.140e+01 -6.550e+00 -1.050e+00  4.850e+00 \n         8          9         10         11         12         13 \n 1.035e+01  3.800e+00 -1.140e+01 -6.550e+00 -1.050e+00 -3.795e-15 \n\nCoefficients: (1 not defined because of singularities)\n            Estimate Std. Error t value Pr(>|t|)\n(Intercept)    3.300      3.572   0.924    0.398\nXconf21      -25.200     14.837  -1.698    0.150\nXconf22      -27.050     16.371  -1.652    0.159\nXconf23      -17.950     16.851  -1.065    0.335\nXconf24      -13.300     16.371  -0.812    0.453\nXconf25      -11.900      8.185  -1.454    0.206\nXconf26      -13.750      7.988  -1.721    0.146\nXconf27       -4.650      8.185  -0.568    0.595\nXconf28           NA         NA      NA       NA\n\nResidual standard error: 11.3 on 5 degrees of freedom\nMultiple R-squared:  0.6394,\tAdjusted R-squared:  0.1346 \nF-statistic: 1.267 on 7 and 5 DF,  p-value: 0.4111\n```\n\n\n:::\n\n```{.r .cell-code}\n# Expected point difference (neutral court)\n(exp_diff2 <- coef(m2)[4] - coef(m2)[8])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nXconf23 \n  -13.3 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Probability of winning (neutral court)\npt( exp_diff2 / summary(m2)$sigma, df = summary(m2)$df[2])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Xconf23 \n0.1460273 \n```\n\n\n:::\n:::\n\n\nInter-conference play determines amount of ``strength'' allocated to the\nconference. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(coef(m)[-1], coef(m2)[-1])\n```\n\n::: {.cell-output-display}\n![](06-margin-of-victory_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n## Rating Systems\n\n### Sagarin Ratings\n\nAn example of publish margin of victory model estimates are\n[Sagarin Ratings](http://sagarin.com/sports/cbsend.htm).\nThere is an \n[R package that may be able to scrape Sagarin ratings](https://github.com/jarad/sagarin).\nArgh, these have stopped being updated in 2023.\n\n### Ken Pomeroy\n\nI believe \n[Ken Pomeroy's ratings](https://kenpom.com/index.php) are based on \nthese margin-of-victory models. \n\n\n\n\n## Examples\n\n### Iowa High School Football\n\n\n### International Handball\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhandball2024 <- read_csv(\"data/Handball_W_InternationalResults.csv\",\n                     col_types = cols(\n                       ScoreA = col_double(),\n                       ScoreB = col_double(),\n                       year = col_integer(),\n                       Date = col_date(),\n                       .default = col_character()\n                     )) |>\n  filter(year == 2024) |>\n  mutate(\n    margin = ScoreA - ScoreB\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# plot(graph_from_data_frame(handball[,c(\"TeamA\",\"TeamB\")]), directed = FALSE)\n\nlibrary(\"networkD3\")\n\np <- simpleNetwork(handball2024, \n                   height=\"100px\", width=\"100px\",        \n        Source = \"TeamA\",                 # column number of source\n        Target = \"TeamB\",                 # column number of target\n        linkDistance = 10,          # distance between node. Increase this value to have more space between nodes\n        charge = -900,                # numeric value indicating either the strength of the node repulsion (negative value) or attraction (positive value)\n        fontSize = 14,               # size of the node names\n        fontFamily = \"serif\",       # font og node names\n        linkColour = \"#666\",        # colour of edges, MUST be a common colour for the whole graph\n        nodeColour = \"#69b3a2\",     # colour of nodes, MUST be a common colour for the whole graph\n        opacity = 0.9,              # opacity of nodes. 0=transparent. 1=no transparency\n        zoom = T                    # Can you zoom on the figure?\n        )\n\np\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"forceNetwork html-widget html-fill-item\" id=\"htmlwidget-426a9dc18e60b9a10cb1\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-426a9dc18e60b9a10cb1\">{\"x\":{\"links\":{\"source\":[37,10,18,4,37,4,18,10,18,4,10,37,16,47,40,22,47,16,22,47,16,40,11,31,14,36,11,14,31,36,14,36,31,11,41,15,27,23,41,27,15,23,23,27,15,41,32,43,3,28,3,32,28,43,3,28,43,32,30,39,6,46,6,39,46,30,46,6,30,39,20,44,29,13,29,20,44,13,29,13,44,20,12,26,35,12,26,35,45,19,33,2,19,33,45,2,2,33,45,19,7,0,7,9,38,0,8,42,21,42,24,8,8,25,25,24,19,44,44,24,17,19,11,31,31,1,11,43,16,30,16,41,34,30,41,16,33,42,44,12,16,33,44,42,16,41,41,33,12,31,43,19,5,0,15,31,19,15,31,43,0,19,43,5,12,15,19,33,44,33,12,33],\"target\":[4,18,37,10,10,18,4,37,10,37,4,18,47,40,16,47,22,40,40,16,22,47,14,36,31,11,31,36,11,14,11,31,14,36,27,23,15,41,15,23,41,27,15,41,27,23,3,28,43,32,28,43,3,32,32,43,3,28,46,6,30,39,46,30,6,39,30,39,6,46,29,13,44,20,13,44,20,29,20,44,29,13,26,12,12,35,35,26,2,33,45,19,45,2,19,33,45,19,33,2,9,38,38,0,9,7,25,21,24,8,25,21,24,42,21,42,17,24,19,17,44,24,43,1,11,43,1,31,41,34,30,34,16,41,12,42,44,41,16,33,41,42,12,44,12,33,44,16,42,0,5,15,19,43,31,43,0,5,5,19,15,31,15,0,31,16,44,5,15,12,44,15],\"value\":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\"colour},\"nodes\":{\"name\":[\"Angola\",\"Argentina\",\"Austria\",\"Azerbaijan\",\"Bosnia and Herzegovina\",\"Brazil\",\"Bulgaria\",\"Cameroon\",\"China\",\"Congo\",\"Croatia\",\"Czech Republic\",\"Denmark\",\"Faroe Islands\",\"Finland\",\"France\",\"Germany\",\"Great Britain\",\"Greece\",\"Hungary\",\"Iceland\",\"India\",\"Israel\",\"Italy\",\"Japan\",\"Kazakhstan\",\"Kosovo\",\"Latvia\",\"Lithuania\",\"Luxembourg\",\"Montenegro\",\"Netherlands\",\"North Macedonia\",\"Norway\",\"Paraguay\",\"Poland\",\"Portugal\",\"Romania\",\"Senegal\",\"Serbia\",\"Slovakia\",\"Slovenia\",\"South Korea\",\"Spain\",\"Sweden\",\"Switzerland\",\"Turkey\",\"Ukraine\"],\"group\":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\"nodesize\":[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8]},\"options\":{\"NodeID\":\"name\",\"Group\":\"group\",\"colourScale\":\"d3.scaleOrdinal(['#69b3a2'])\",\"fontSize\":14,\"fontFamily\":\"serif\",\"clickTextSize\":35,\"linkDistance\":10,\"linkWidth\":\"'1.5px'.toString()\",\"charge\":-900,\"opacity\":0.9,\"zoom\":true,\"legend\":false,\"arrows\":false,\"nodesize\":true,\"radiusCalculation\":\"d.nodesize\",\"bounded\":false,\"opacityNoHover\":1,\"clickAction\":null}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nseparated_countries <- c(\"Romania\", \"Bosnia and Herzegovina\", \"Greece\", \"Croatia\")\n\nhandball2024b <- handball2024 |>\n  filter(!( TeamA %in% separated_countries | TeamB %in% separated_countries) )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Convert team names into factors\nteams <- data.frame(\n  names = unique(handball2024b$TeamA, handball2024b$TeamB) |>\n    unique() |>\n    sort() |>\n    factor()\n) \n\nX_h <- handball2024b |>\n  rename(\n    home = TeamA,\n    away = TeamB\n  ) |>\n  mutate(\n    home = factor(home, levels = teams$names),\n    away = factor(away, levels = teams$names)\n  ) |>\n  construct_model_matrix()\n\ndim(X_h) # n_games x n_teams\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 160  44\n```\n\n\n:::\n\n```{.r .cell-code}\nm <- lm(handball2024b$margin ~ X_h - 1) # remove the home field advantage\n\nteams$strength <- coef(m)\nteams$strength[nrow(teams)] <- 0\nteams$strength <- teams$strength - mean(teams$strength)\n\nteams$names <- factor(teams$names, levels = teams$names[order(teams$strength)])\n\nggplot(teams, \n       aes(\n         x = strength,\n         y = names\n       )) +\n  geom_bar(stat = \"identity\")\n```\n\n::: {.cell-output-display}\n![](06-margin-of-victory_files/figure-html/handball-model-1.png){width=672}\n:::\n:::\n\n\n## R packages\n\n\n",
    "supporting": [
      "06-margin-of-victory_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"site_libs/d3-4.5.0/d3.min.js\"></script>\n<script src=\"site_libs/forceNetwork-binding-0.4/forceNetwork.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}