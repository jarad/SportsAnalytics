{
  "hash": "f13af4b297744389df545b00941478b6",
  "result": {
    "engine": "knitr",
    "markdown": "# Regression\n\nStub for regression content\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"tidyverse\"); theme_set(theme_bw())\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4.9000     ✔ readr     2.1.5     \n✔ forcats   1.0.0          ✔ stringr   1.5.1     \n✔ ggplot2   3.5.1          ✔ tibble    3.2.1     \n✔ lubridate 1.9.3          ✔ tidyr     1.3.1     \n✔ purrr     1.0.2          \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(\"ggResidpanel\")\n```\n:::\n\n\n\n\n## Simple Linear Regression\n\n### Model\n\nFor observation $i = \\{1,2,\\ldots,n\\}$, let\n\n- $Y_i$ be the response variable and\n- $X_i$ be the explanatory variable.\n\nThe simple linear regression model (SLR) assumes\n$$ \nY_i \\stackrel{ind}{\\sim} N(\\beta_0 + \\beta_1 X_i, \\sigma^2)\n$$\nor, equivalently,\n$$ \nY_i = \\beta_0 + \\beta_1 X_i + \\epsilon_i, \\quad \\epsilon_i \\stackrel{ind}{\\sim} N(0, \\sigma^2).\n$$\n\n### Interpretation\n\nRecall\n$$ \nE[Y_i] = \\beta_0 + \\beta_1 X_i\n$$\n\nThus,\n\n- $\\beta_0$ is the expected response when $X_i=0$ \\pause\n- $\\beta_1$ is the expected increase in the response when $X_i$ is increased by 1.\n\n\n\n\n### Assumptions\n\nRecall\n$$ \nE[Y_i] = \\beta_0 + \\beta_1 X_i, \\quad \\epsilon_i \\stackrel{ind}{\\sim} N(0, \\sigma^2)\n$$\n\nThus, the model assumptions are \n\n- The errors are independent.\n- The errors are normally distributed.\n- The errors have constant variance.\n- The relationship between the expected response and the explanatory variable\nis a straight line. \n\n\n\n### Diagnostics\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm <- lm(Sepal.Length ~ Sepal.Width, data = iris)\nggResidpanel::resid_panel(m, \n                          plots = c(\"resid\", \"qq\", \"cookd\"), \n                          qqbands = TRUE, \n                          nrow = 1)\n```\n\n::: {.cell-output-display}\n![](03-regression_files/figure-html/slr-diagnostics-1.png){width=672}\n:::\n:::\n\n\n\n\n### Triathlon Data\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- read_csv(\"data/ironman_lake_placid_female_2022_canadian.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 64 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (6): Name, Country, Gender, Division, Finish.Status, Location\ndbl (11): Bib, Division.Rank, Overall.Time, Overall.Rank, Swim.Time, Swim.Ra...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(d)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 17\n    Bib Name     Country Gender Division Division.Rank Overall.Time Overall.Rank\n  <dbl> <chr>    <chr>   <chr>  <chr>            <dbl>        <dbl>        <dbl>\n1     2 Melanie… Canada  Female FPRO                 5         575.           21\n2     9 Pamela-… Canada  Female FPRO                10         610.           51\n3  1000 Carley … Canada  Female F35-39               4         660.          126\n4  1935 Seanna … Canada  Female F45-49               3         665.          131\n5   511 Marie-C… Canada  Female F45-49               4         679.          161\n6  1240 Julie H… Canada  Female F40-44               6         693.          202\n# ℹ 9 more variables: Swim.Time <dbl>, Swim.Rank <dbl>, Bike.Time <dbl>,\n#   Bike.Rank <dbl>, Run.Time <dbl>, Run.Rank <dbl>, Finish.Status <chr>,\n#   Location <chr>, Year <dbl>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(d |> filter(Swim.Time < 500), \n       aes(x = Swim.Time, y = Bike.Time)) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](03-regression_files/figure-html/triathlon-data-plot-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nm <- lm(Bike.Time ~ Swim.Time, data = d |> filter(Swim.Time < 500))\nggResidpanel::resid_panel(m, plots = c(\"resid\", \"qq\", \"cookd\"), qqbands = TRUE, nrow = 1)\n```\n\n::: {.cell-output-display}\n![](03-regression_files/figure-html/triathlon-model-diagnostics-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(m)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = Bike.Time ~ Swim.Time, data = filter(d, Swim.Time < \n    500))\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-68.901 -23.468  -2.169  23.808  70.369 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 188.8604    32.0893   5.885 1.82e-07 ***\nSwim.Time     2.8729     0.4035   7.120 1.44e-09 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 34.83 on 61 degrees of freedom\nMultiple R-squared:  0.4538,\tAdjusted R-squared:  0.4449 \nF-statistic: 50.69 on 1 and 61 DF,  p-value: 1.443e-09\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncbind(coef(m), confint(m))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                            2.5 %     97.5 %\n(Intercept) 188.860386 124.693942 253.026829\nSwim.Time     2.872855   2.065987   3.679724\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(m)$r.squared\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.4538433\n```\n\n\n:::\n:::\n\n\n\n\nWhen swim time is 0, the expected Bike Time is \n189 mins with a 95\\% interval of \n(125, 253).\nFor additional minute of swim time, \nthe bike time is expected to increase \n2.9 mins  \n(2.1, 3.7).\nThe model explains \n45\\% of the variability\nin bike time.\n\n### Two-sample T-test\n\n\n\n## Multiple Linear Regression\n\n",
    "supporting": [
      "03-regression_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}